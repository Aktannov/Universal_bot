import requests
import json
from money import valut
from aiogram import (
    Dispatcher, types,
)
from src.config import load_config

async def convert(message: types.Message): 
    '''–ü—Ä–æ–≤–æ–¥–∏–º –≤–∞–æ–ª–∏–¥–∞—Ü–∏—é –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –æ—Ç–ø—Ä–æ–≤–ª—è–µ–º —á–µ—Ä–µ–∑ API –¥–∞–Ω–Ω—ã–µ –∫–æ–≤–µ—Ä—Ç–∞—Ü–∏–∏, –æ—Ç–ø—Ä–æ–≤–ª—è–µ–º –∫–æ–Ω–µ—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç'''       
    text = message.text.split()
    api_key = load_config().tg_bot.currency
    if len(text) == 4:
        try:
            # –î–µ–ª–∞–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º –∑–∞–ø—Ä–æ—Å
            amount = text[1]
            from_ = text[2].upper()
            to = text[3].upper()
            
            if from_ not in valut or to not in valut:
                await message.answer('–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç –≤–≤–µ–¥–∏—Ç–µ: /currancy_info')
            
            if not amount.replace('.', '').isdigit():
                await message.answer('–¢–æ–ª—å–∫–æ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞')
            
            # –û—Ç–ø—Ä–æ–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
            data = requests.get(f'https://api.fastforex.io/convert?from={from_}&to={to}&amount={amount}&api_key={api_key}').text
            json_data = json.loads(data)
            response = f"{amount} {from_} ü§∏‚Äç‚ôÇÔ∏è {json_data['result'][to]} {to}"

            await message.answer(response)
        except Exception as ex:
            message.answer('–£–ø—Å, –æ—à–∏–±–∫–∞ —Å–æ–µ–¥–µ–Ω–µ–Ω–∏—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ(')

    else:
        await message.answer('–§–æ—Ä–º–∞—Ç: /convert 425000 RUB USD, –≥–¥–µ RUB –ø–µ—Ä–µ–≤–æ–¥—è—Ç—Å—è –≤ USD')


async def currancy_info(message: types.Message):
    photo_1 = open('media/first.png', 'rb')
    photo_2 = open('media/second.png', 'rb')

    await message.answer_photo(photo_2)
    await message.answer_photo(photo_1)


async def convert_help(message: types.Message):
    text = f'–î–ª—è –∫–æ–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤–æ–ª—é—Ç –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /convert –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /convert 425000 RUB USD, –≥–¥–µ RUB –ø–µ—Ä–µ–≤–æ–¥—è—Ç—Å—è –≤ USD\n–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª—é—Ç –≤–≤–µ–¥–∏—Ç–µ: /currancy_info'
    await message.answer(text)



def register_currency(dp: Dispatcher):
    dp.register_message_handler(convert, commands='convert')
    dp.register_message_handler(currancy_info, commands='currancy_info')
    dp.register_message_handler(convert_help, commands='convert_help')